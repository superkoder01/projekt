// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	invoice "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/billing.git/pkg/invoice"
)

// InvoiceEventValidator is an autogenerated mock type for the InvoiceEventValidator type
type InvoiceEventValidator struct {
	mock.Mock
}

// ValidateInvoiceEvent provides a mock function with given fields: ctx, invoiceEvent
func (_m *InvoiceEventValidator) ValidateInvoiceEvent(ctx context.Context, invoiceEvent *invoice.InvoiceEvent) error {
	ret := _m.Called(ctx, invoiceEvent)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *invoice.InvoiceEvent) error); ok {
		r0 = rf(ctx, invoiceEvent)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewInvoiceEventValidatorT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoiceEventValidator creates a new instance of InvoiceEventValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoiceEventValidator(t NewInvoiceEventValidatorT) *InvoiceEventValidator {
	mock := &InvoiceEventValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
