/*
BMSFES. 
Copyright (C) 2022-2035 

This file is part of the BMSFES solution. 
BMSFES is free software: you can redistribute it and/or modify 
it under the terms of the GNU Affero General Public License as 
published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.
 
BMSFES solution is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License 
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	ports "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/c4e-iges.git/internal/core/ports"
)

// InvoicePublisherFactory is an autogenerated mock type for the InvoicePublisherFactory type
type InvoicePublisherFactory struct {
	mock.Mock
}

// MakePublisher provides a mock function with given fields:
func (_m *InvoicePublisherFactory) MakePublisher() ports.InvoicePublisher {
	ret := _m.Called()

	var r0 ports.InvoicePublisher
	if rf, ok := ret.Get(0).(func() ports.InvoicePublisher); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ports.InvoicePublisher)
		}
	}

	return r0
}

type NewInvoicePublisherFactoryT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoicePublisherFactory creates a new instance of InvoicePublisherFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoicePublisherFactory(t NewInvoicePublisherFactoryT) *InvoicePublisherFactory {
	mock := &InvoicePublisherFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
