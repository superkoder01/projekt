// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	invoice "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/billing.git/pkg/invoice"
)

// InvoiceNumberGenerator is an autogenerated mock type for the InvoiceNumberGenerator type
type InvoiceNumberGenerator struct {
	mock.Mock
}

// GetNumber provides a mock function with given fields: ctx, customerId, event
func (_m *InvoiceNumberGenerator) GetNumber(ctx context.Context, customerId string, event invoice.InvoiceEvent) (string, error) {
	ret := _m.Called(ctx, customerId, event)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, invoice.InvoiceEvent) string); ok {
		r0 = rf(ctx, customerId, event)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, invoice.InvoiceEvent) error); ok {
		r1 = rf(ctx, customerId, event)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewInvoiceNumberGeneratorT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoiceNumberGenerator creates a new instance of InvoiceNumberGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoiceNumberGenerator(t NewInvoiceNumberGeneratorT) *InvoiceNumberGenerator {
	mock := &InvoiceNumberGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
