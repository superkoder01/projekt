/*
BMSFES. 
Copyright (C) 2022-2035 

This file is part of the BMSFES solution. 
BMSFES is free software: you can redistribute it and/or modify 
it under the terms of the GNU Affero General Public License as 
published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.
 
BMSFES solution is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License 
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	alarms "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/c4e-iges.git/internal/core/domain/alarms"

	mock "github.com/stretchr/testify/mock"
)

// AlarmService is an autogenerated mock type for the AlarmService type
type AlarmService struct {
	mock.Mock
}

// SendAlarm provides a mock function with given fields: ctx, alarm
func (_m *AlarmService) SendAlarm(ctx context.Context, alarm *alarms.Alarm) {
	_m.Called(ctx, alarm)
}

type NewAlarmServiceT interface {
	mock.TestingT
	Cleanup(func())
}

// NewAlarmService creates a new instance of AlarmService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAlarmSender(t NewAlarmServiceT) *AlarmService {
	mock := &AlarmService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
