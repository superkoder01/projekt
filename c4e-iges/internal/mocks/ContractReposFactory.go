// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	ports "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/c4e-iges.git/internal/core/ports"
)

// ContractReposFactory is an autogenerated mock type for the ContractReposFactory type
type ContractReposFactory struct {
	mock.Mock
}

// MakeRepo provides a mock function with given fields:
func (_m *ContractReposFactory) MakeRepo() ports.ContractRepo {
	ret := _m.Called()

	var r0 ports.ContractRepo
	if rf, ok := ret.Get(0).(func() ports.ContractRepo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ports.ContractRepo)
		}
	}

	return r0
}

type NewContractReposFactoryT interface {
	mock.TestingT
	Cleanup(func())
}

// NewContractReposFactory creates a new instance of ContractReposFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewContractReposFactory(t NewContractReposFactoryT) *ContractReposFactory {
	mock := &ContractReposFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
