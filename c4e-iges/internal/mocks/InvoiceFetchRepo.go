// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	billing "gitlab.sce-ovoo.pl/ovoo/products/chain4energy/billing/commons.git/billing"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// InvoiceFetchRepo is an autogenerated mock type for the InvoiceFetchRepo type
type InvoiceFetchRepo struct {
	mock.Mock
}

// GetInvoiceSummaryByIssueDate provides a mock function with given fields: ctx, issueStartDate, issueEndDate
func (_m *InvoiceFetchRepo) GetInvoiceSummaryByIssueDate(ctx context.Context, issueStartDate time.Time, issueEndDate time.Time) (*billing.InvoiceSummary, error) {
	ret := _m.Called(ctx, issueStartDate, issueEndDate)

	var r0 *billing.InvoiceSummary
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, time.Time) *billing.InvoiceSummary); ok {
		r0 = rf(ctx, issueStartDate, issueEndDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billing.InvoiceSummary)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, time.Time, time.Time) error); ok {
		r1 = rf(ctx, issueStartDate, issueEndDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewInvoiceFetchRepoT interface {
	mock.TestingT
	Cleanup(func())
}

// NewInvoiceFetchRepo creates a new instance of InvoiceFetchRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInvoiceFetchRepo(t NewInvoiceFetchRepoT) *InvoiceFetchRepo {
	mock := &InvoiceFetchRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
